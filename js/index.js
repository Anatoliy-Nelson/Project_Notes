const MOCK_NOTES = [
  {
    id: 1,
    title: "–†–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º–∞–º–∏",
    content:
      "–ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—è–º —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ form.elements –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ name",
    color: colors.GREEN,
    isFavorite: false,
  },
  {
    id: 2,
    title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ",
    content:
      "–ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—è–º —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ form.elements –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ name",
    color: colors.BLUE,
    isFavorite: true,
  },
  {
    id: 3,
    title: "Flexbox (CSS)",
    content:
      "–ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—è–º —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ form.elements –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ name",
    color: colors.YELLOW,
    isFavorite: false,
  },
  {
    id: 4,
    title: "–û–±—ä–µ–∫—Ç—ã (JavaScript)",
    content:
      "–ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—è–º —Ñ–æ—Ä–º—ã –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ form.elements –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é, —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –∞—Ç—Ä–∏–±—É—Ç–µ name",
    color: colors.PURPLE,
    isFavorite: true,
  },
];

// —Å–ª–æ–≤–∞—Ä—å —Ü–≤–µ—Ç–æ–≤
const colors = {
  GREEN: "green",
  BLUE: "blue",
  RED: "red",
  YELLOW: "yellow",
  PURPLE: "purple",
};

// —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
const model = {
  //   notes: [],
  notes: MOCK_NOTES,
//   addTask(title) {
//     const newTask = { title: title, isDone: false, id: Math.random() };
//     // —Ç–æ –∂–µ, —á—Ç–æ { title: title, isDone: isDone, id: id }

//     this.tasks.push(newTask);
//     view.renderTasks(model.tasks); // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
    //   },
    addNote(title, content, color) {
    const note = {
      // 1. —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É
    },
 
    // 2. –¥–æ–±–∞–≤–∏–º –∑–∞–º–µ—Ç–∫—É –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
    // 3. –æ–±–Ω–æ–≤–∏–º view
    },
    updateNotesView() {
    // 1. —Ä–µ–Ω–¥–µ—Ä–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ (–≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ view.renderNotes)
    // 2. —Ä–µ–Ω–¥–µ—Ä–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ—Ç–æ–∫ (–≤—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ view.renderNotesCount)
  },
//   deleteTask(taskId) {
//     this.tasks = this.tasks.filter((task) => task.id !== taskId);

//     view.renderTasks(model.tasks);
//   },
//   toggleTask(taskId) {
//     // –≤–æ—Å–ø–æ–ª—å–∑—É–µ–º—Å—è –º–µ—Ç–æ–¥–æ–º map
//     this.tasks = this.tasks.map((task) => {
//       if (task.id === taskId) {
//         task.isDone = !task.isDone;
//       }
//       return task;
//     });

//     view.renderTasks(model.tasks); // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
//   },
//   clearTasks() {
//     this.tasks = this.tasks.filter((task) => !task.isDone);

//     view.renderTasks(model.tasks);
//   },
};

// –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: —Ä–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á, —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
const view = {
  init() {
    this.renderNotes(model.notes)
  },
  renderNotes(notes) { ... }
  view.renderNotesCount(notes) {...}
  
  const form = document.querySelector('.note-form')
  form.addEventListener('submit', (event) => {
      // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
      // –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä

      controller.addNote(title, content, color)
  }),

  function init() {
    view.init();
  }
},

init()
// const view = {
//   load() {
//     //1
//     this.renderTasks(model.tasks);

//     const form = document.querySelector(".form");
//     const input = document.querySelector(".input");

//     form.addEventListener("submit", function (event) {
//       event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
//       // const title = input.value
//       controller.addTask(input.value); // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ addTask –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞

//       input.value = ""; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
//     });
//     const list = document.querySelector(".list");
//     list.addEventListener("click", function (event) {
//       // –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
//       if (event.target.classList.contains("task-title")) {
//         // id –∑–∞–¥–∞—á–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ id —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
//         // +, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –≤ number
//         const taskId = +event.target.parentElement.id;
//         controller.toggleTask(taskId);
//       }
//       if (event.target.classList.contains("delete-button")) {
//         const taskId = +event.target.parentElement.id;
//         // 2. –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
//         controller.deleteTask(taskId);
//       }
//     });
//     const clearButton = document.querySelector(".clear");
//     clearButton.addEventListener("click", function (event) {
//       controller.clearTasks();
//     });
//   },
//   renderTasks(tasks) {
//     const list = document.querySelector(".list");
//     let tasksHTML = "";

//     for (let i = 0; i < tasks.length; i++) {
//       const task = tasks[i];
//       tasksHTML =
//         tasksHTML +
//         `<li id="${task.id}" class="${task.isDone ? "done" : ""}">
//                     <b class="task-title">${task.title}</b>
//                     <button class="delete-button" type="button">–£–¥–∞–ª–∏—Ç—å üóë</button>
//                </li>`;

//       list.innerHTML = tasksHTML;
//     }
//   },
// };

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
const controller = {
  addTask(title) {
    if (title.trim() !== "") {
      model.addTask(title);
    }
  },
  deleteTask(id) {
    model.deleteTask(id);
  },
  toggleTask(id) {
    model.toggleTask(id);
  },
  clearTasks() {
    model.clearTasks();
  },
};

function viewDefault() {
  view.load();
}
viewDefault();
